@using Book.App.Models
@model TourModel

@{
    ViewData["Title"] = Model.Name;
}

@{
    var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value);
    var role = User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value;
    var sliderData = new ImageSliderModel
            {
                Images = Model.Images,
                SliderId = Model.Id,
            };
    var index = 0;
}

<section class="card glassmorphism">
    <header class="card-header">
        <partial name="_ImageSliderPartial" model="@sliderData" />
        <h1 class="card-title mt-2">@Model.Name</h1>
    </header>
    <div class="card-body">
        <div class="">
            <p class="card-text">@Model.Description</p>

            <partial name="_TourDetailsPartial" model="@Model" />

            <div>
                <partial name="_WaypointsTourPartial" model="@Model.Waypoints" />
            </div>
        </div>
        <div class="d-flex justify-content-between mt-4 gap-2">
            @if (Model.Users.Count >= Model.MaxUsers && Model.Reservations.FirstOrDefault(r => r.User.Id == userId) ==
            null)
            {
                <button class="btn btn-danger" disabled>Full</button>
            }
            else if (Model.Reservations.FirstOrDefault(r => r.User.Id == userId) == null)
            {
                <form asp-action="BookTour" asp-controller="Book" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button class="btn btn-primary">Book</button>
                </form>
            }
            else
            {
                <form asp-action="Delete" asp-controller="Book" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button class="btn btn-danger">
                        Cancel this trip
                    </button>
                </form>
            }
            <strong class="text-danger h3 m-0">@Model.Price z≈Ç</strong>
        </div>
    </div>
</section>

<div id="map" class="mt-4 rounded"></div>

@if (role == "Admin")
{
    <section class="mt-3">
        @if (Model.Reservations.Count > 0)
        {
            <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample"
                aria-expanded="false" aria-controls="collapseExample">
                Users booked this trip
            </button>

            <div class="collapse mt-3 p-3 rounded glassmorphism" id="collapseExample">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Username</th>
                            <th scope="col">E-mail</th>
                            <th scope="col">Phone number</th>
                            <th scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var reservation in Model.Reservations)
                        {
                            index++;
                            <tr>
                                <th scope="row">@index</th>
                                <td>@reservation.User.Username</td>
                                @if (reservation.User.Contact != null)
                                {
                                    <td>@reservation.User.Contact.Email</td>
                                }
                                else
                                {
                                    <td>Not provided</td>
                                }
                                @if (reservation.User.Contact != null)
                                {
                                    <td>@reservation.User.Contact.Phone</td>
                                }
                                else
                                {
                                    <td>Not provided</td>
                                }

                                <td>
                                    <a class="btn btn-danger" asp-action="DeleteUserInTour" asp-controller="Book"
                                        asp-route-id="@reservation.User.Id" asp-route-tourId="@Model.Id">
                                        <ion-icon name="close-outline"></ion-icon>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning" role="alert">
                No one has booked this trip yet
            </div>
        }
    </section>
}

@section Scripts {
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <script src="https://cdn.maptiler.com/maptiler-sdk-js/v1.2.0/maptiler-sdk.umd.js"></script>
    <script src="https://cdn.maptiler.com/leaflet-maptilersdk/v2.0.0/leaflet-maptilersdk.js"></script>

    <script src="~/js/userMap.js" type="module"></script>
    <script type="module">
        import { UserMap } from '/js/userMap.js';
        const model = @Html.Raw(Json.Serialize(Model));

        if (model.waypoints.$values.length > 0) {
            const userMap = new UserMap(model.waypoints.$values);
            const latLngs = model.waypoints.$values.map(w => L.latLng(w.latitude, w.longitude));
            const bounds = L.latLngBounds(latLngs);
            userMap.map.fitBounds(bounds, { padding: [ 50, 50 ] });
        }
    </script>
}
