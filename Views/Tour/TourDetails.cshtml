@using Book.App.Models
@model TourModel

@{
    ViewData["Title"] = Model.Name;
}

@{
    var userId = int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value);
}

<p class="text-danger h2"> @TempData["ErrorMessage"]</p>
<section class="card">
    <header class="card-header">
        <partial name="_ImageSliderPartial" model="@Model" />
        <h1 class="card-title mt-2">@Model.Name</h1>
    </header>
    <div class="card-body">
        <div class="">
            <p class="card-text">@Model.Description</p>

            <partial name="_TourDetailsPartial" model="@Model" />

            <div>
                <div class="d-flex gap-2 mt-4 flex-wrap">
                    @foreach (var waypoint in Model.Waypoints)
                    {
                        @if (waypoint.IsRoad == false)
                        {
                            <div class="d-flex align-items-center">
                                <strong class="d-block pe-2">@waypoint.Name</strong>
                                @if (@Model.Waypoints.Last() != waypoint)
                                {
                                    <ion-icon class="text-primary" name="arrow-forward"></ion-icon>
                                }
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-between mt-4">
            @if (Model.Users.Count >= Model.MaxUsers && Model.Users.FirstOrDefault(u => u.Id == userId) == null)
            {
                <button class="btn btn-danger" disabled>Full</button>
            }
            else if (Model.Users.FirstOrDefault(u => u.Id == userId) == null)
            {
                <form asp-action="BookTour" asp-controller="Book" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button class="btn btn-primary">Book</button>
                </form>
            }
            else
            {
                <form asp-action="Delete" asp-controller="Book" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button class="btn btn-danger">
                        Cancel this trip
                    </button>
                </form>
            }
            <strong class="text-danger h3 m-0">@Model.Price z≈Ç</strong>
        </div>
    </div>
</section>

<div id="map" class="mt-4 rounded"></div>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

<script>
    const model = @Html.Raw(Json.Serialize(Model));

    if (model.waypoints.$values.length > 0) {
        const middleLatLong = model.waypoints.$values.map(w => [ w.latitude, w.longitude ]).reduce((acc, val) => {
            return [ acc[ 0 ] + val[ 0 ], acc[ 1 ] + val[ 1 ] ];
        }, [ 0, 0 ]).map(v => v / model.waypoints.$values.length);

        const map = L.map('map').setView(middleLatLong, 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
        }).addTo(map);

        const waypoints = model.waypoints.$values
        const waypointsLatLng = waypoints.map(w => [ w.latitude, w.longitude ]);

        function createWayPointPopup(title, description, images, id) {
            const imageDivs = images.map((image, index) => `
                <div class="carousel-item ${index === 0 ? 'active' : ''}">
                    <img src="${image.imageUrl}" class="d-block w-100" alt="Image ${index + 1}" />
                </div>`).join('')

            return `
                <div>
                    <h4>${title}</h4>
                    <p>${description}</p>

                    <div id="slider-1" class="carousel slide" data-ride="carousel" data-interval="4000">
                        <div class="carousel-inner">
                        ${imageDivs}
                        </div>
                        <a class="carousel-control-prev" href="#slider-1" role="button" data-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        </a>
                        <a class="carousel-control-next" href="#slider-1" role="button" data-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        </a>
                    </div>
                </div>
            `
        }

        L.polyline(waypointsLatLng, { color: 'red' }).addTo(map);

        waypoints.forEach(w => {
            if (w.isRoad) return
            L.marker({ lat: w.latitude, lng: w.longitude }).addTo(map).bindPopup(createWayPointPopup(w.name, w.description, w.images.$values));
        });
    }
</script>