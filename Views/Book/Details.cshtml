@using Book.App.ViewModels
@model TourViewModel

@{
    ViewBag.Title = $"Tour - {Model.TourModel.Name}";
}

<section class="card">
    <div class="card-header d-flex gap-2">
        <partial name="_ImageSliderPartial" model="@Model.TourModel" />
        <h4 class="card-title text-primary">@Model.TourModel.Name</h4>
    </div>

    <div class="card-body">
        <div class="">
            <p class="card-text">@Model.TourModel.Description</p>

            <partial name="_TourDetailsPartial" model="@Model.TourModel" />

            <div>
                <div class="d-flex gap-2 mt-1">
                    @foreach (var waypoint in Model.TourModel.Waypoints)
                    {
                        <div class="d-flex align-items-center">
                            <strong class="d-block pe-2">@waypoint.Name</strong>
                            @if (@Model.TourModel.Waypoints.Last() != waypoint)
                            {
                                <ion-icon name="arrow-forward"></ion-icon>
                            }
                        </div>
                    }
                </div>

                <div class="d-flex justify-content-between mt-1">
                    <strong class="text-secondary">Distance: @Math.Round(Model.Distance, 3) km</strong>
                    <strong class="text-secondary">Passed @(Math.Round(Model.Distance *
                        Model.PercentOfTime,
                        3)) km</strong>
                </div>
                <p class="text-success mt-1">@(Math.Round(Model.PercentOfTime * 100, 1))% completed</p>
            </div>
        </div>

        <form asp-action="Delete" asp-controller="Book" method="post" class="mt-3">
            <input type="hidden" name="id" value="@Model.TourModel.Id" />
            <button class="btn btn-danger">
                Cancel this trip
            </button>
        </form>
    </div>
</section>

<div id="map" class="mt-4 rounded"></div>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
<script src="~/js/userMap.js" type="module"></script>
<script type="module">
    import { UserMap } from '/js/userMap.js';
    const model = @Html.Raw(Json.Serialize(Model.TourModel));

    if (model.waypoints.$values.length > 0) {
        const userMap = new UserMap(model.waypoints.$values);
        const middleLatLong = model.waypoints.$values.map(w => [ w.latitude, w.longitude ]).reduce((acc, val) => {
            return [ acc[ 0 ] + val[ 0 ], acc[ 1 ] + val[ 1 ] ];
        }, [ 0, 0 ]).map(v => v / model.waypoints.$values.length);

        userMap.map.setView(middleLatLong, 13);
    }
</script>