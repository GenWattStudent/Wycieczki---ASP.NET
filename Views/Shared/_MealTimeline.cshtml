@using Book.App.ViewModels
@model TimelineViewModel

@if ((Model.Meals == null || Model.Meals.Count == 0) && !Model.isEditMode)
{
    <div class="alert alert-info mt-3">
        <ion-icon name="information-circle-outline"></ion-icon>
        <span>No meals found</span>
    </div>
}

@if (Model.Meals != null && Model.Meals.Count > 0)
{
    <div id="timeline" class="glassmorphism p-3 mt-3 rounded gap-2">
        @foreach (var meal in Model.Meals.OrderBy(m => m.Start))
        {
            <div class="checkpoint card">
                <div class="timeline-item-content card-body">
                    <small class="font-weight-bold">@meal.Start</small>
                    <h5 class="text-primary">@meal.Name</h5>
                    <p class="text-muted">@meal.Description</p>
                    <span class="badge badge-secondary p-1">
                        @meal.MealType
                    </span>

                    @if (Model.isEditMode)
                    {
                        <div class="position-absolute timeline-actions">
                            @using (Html.BeginForm("Delete", "Meal", new { id = meal.Id }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button data-toggle="tooltip" data-placement="top" title="Delete @meal.Name meal" type="submit"
                                    class="btn p-0">
                                    <ion-icon name="trash-outline"></ion-icon>
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>
        }
        <div id="timeline-progress" class="line position-absolute bg-primary">
            <div class="line-progress"></div>
            <div id="current-timeline-progress" class="current-progress bg-success"></div>
            <div id="current-timeline-progress-indicator" class="current-progress-indicator bg-danger"></div>
        </div>
    </div>
}
