@using Book.App.ViewModels
<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Book.App</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Book.App.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css"
        rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.maptiler.com/maptiler-sdk-js/v1.2.0/maptiler-sdk.css" />

    <script type="importmap">
    {
        "imports": {
            "three": "https://unpkg.com/three@@0.162.0/build/three.module.js",
            "three/addons/": "https://unpkg.com/three@@0.162.0/examples/jsm/"
        }
    }
    </script>

</head>

<body class="background">
    <header id="nav">
        <nav class="navbar-expand-sm navbar-toggleable-sm glass-2 border-bottom box-shadow d-block">
            <div class="container-fluid d-flex justify-content-between px-2">
                <a class="navbar-brand font-weight-bold text-light" asp-area="" asp-controller="Home"
                    asp-action="Index">
                    <img class="rounded me-2" style="width: 50px;height:50px;" src="~/images/booklogo.png" alt="logo" />
                    Bookmania
                </a>

                <div class="d-flex align-items-center">
                    @await Component.InvokeAsync("UserAvatar")
                </div>
            </div>
            @await Component.InvokeAsync("Nav")
        </nav>
    </header>

    <div class="d-flex gap-3 p-3" style="overflow: hidden;" id="main">
        <div id="sidebar" class="d-block w-100 small"
            style="position: fixed; z-index: 100; left: -100%; transform: translateX(-50%); max-width: 350px;overflow-y: auto;">
            <div class="overlay"></div>
            <div id="clock" class="glassmorphism p-3 rounded d-flex align-items-center gap-2 text-primary">
                <ion-icon id="time-icon"></ion-icon>
                <span id="time"></span>
                <span id="country"></span>
            </div>

            @await Component.InvokeAsync("MealTimeline")
            <div id="weather-box" class="glassmorphism p-3 rounded mt-3">
                <partial name="_CurrentUserWeather" />
            </div>
        </div>

        <div class="container-lg" style="overflow-y: auto;">
            <main role=" main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    </div>

    <footer class="border-top glassmorphism p-2">
        <div class="contaner">
            &copy; @(DateTime.Now.Year) - Bookmania - All rights reserved
        </div>
    </footer>


    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            const footer = $("footer");
            const main = $("#main");

            function resizeMain() {
                const footerPaddingY = parseInt(footer.css("padding-top")) + parseInt(footer.css("padding-bottom"));
                const mainHeight = window.innerHeight - footer.height() - main.offset().top - footerPaddingY;
                main.css("height", mainHeight);
            }

            resizeMain();

            $(window).resize(resizeMain);
        });
    </script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
        crossorigin="anonymous"></script>
    <script src="~/js/weather/oneDayWeather.js"></script>

    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script src="~/js/tooltip.js"></script>
    <script src="~/js/timeline/timeline.js" defer></script>
    <!-- Toastr -->
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
    <script type="text/javascript"
        src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script src="~/js/toastr.js"></script>
    <script src="~/js/time.js"></script>

    @if (TempData["ErrorMessage"] != null)
    {
        <script>
            toastr.error("@TempData["ErrorMessage"].ToString()");
        </script>
    }

    <script>
        $(document).ready(function () {
            let isAutomaticScrolling = true;
            let start = null;
            const threshold = 100; // Set your threshold here

            $('#sidebar').on('mouseenter', function () {
                isAutomaticScrolling = false;
            });

            $('#sidebar').on('mouseleave', function () {
                isAutomaticScrolling = true;
            });

            $("#sidebar").on('touchstart', function () {
                isAutomaticScrolling = false;
            });

            $('#sidebar').on('touchend touchcancel', function () {
                if ($(event.target).closest('#sidebar').length === 0) {
                    isAutomaticScrolling = true;
                }
            });

            function clamp(value, min, max) {
                return Math.min(Math.max(value, min), max);
            }

            function handleSidebarAutomaticScrolling() {
                if (isAutomaticScrolling) {
                    const sideBarScrollTop = $('#sidebar').scrollTop();
                    const sideBarVisibleHeight = $('#sidebar').height();
                    const newScrollTop = Math.round(clamp(sideBarScrollTop + sideBarVisibleHeight, 0, $('#sidebar')[ 0 ].scrollHeight));

                    if (newScrollTop >= $('#sidebar')[ 0 ].scrollHeight) {
                        $('#sidebar').animate({ scrollTop: 0 }, 1000);
                        return
                    }

                    $('#sidebar').animate({ scrollTop: newScrollTop }, 1000);
                }
            }

            setInterval(handleSidebarAutomaticScrolling, 5000);

            function handleSidebar(distance) {
                if (distance > threshold) {
                    $('#sidebar').css('left', '50%');
                } else if (distance < -threshold) {
                    $('#sidebar').css('left', '-100%');
                }
            }

            function addListners() {
                // Listen for the touchstart event
                $(window).on('touchstart', function (event) {
                    start = event.originalEvent.touches[ 0 ].clientX;
                });

                // Listen for the touchmove event
                $(window).on('touchmove', function (event) {
                    const end = event.originalEvent.changedTouches[ 0 ].clientX;
                    const distance = end - start;
                    // if cursor is not hovering the #map element
                    if ($(event.target).closest('#map').length === 0) {
                        handleSidebar(distance);
                    }
                });

                // Listen for the touchend event
                $(window).on('touchend', function (event) {
                    start = null;
                });

                $(window).on('touchcancel', function (event) {
                    start = null;
                });

                $(window).on('touchleave', function (event) {
                    start = null;
                });
                // Listen for the mousedown event
                $(window).on('mousedown', function (event) {
                    start = event.clientX;
                });

                // Listen for the mousemove event
                $(window).on('mousemove', function (event) {
                    if (start == null) return;
                    const distance = event.clientX - start;
                    if ($(event.target).closest('#map').length === 0) {
                        handleSidebar(distance);
                    }
                });

                // Listen for the mouseup event
                $(window).on('mouseup', function (event) {
                    start = null;
                });

                // Listen for the mouseleave event
                $(window).on('mouseleave', function (event) {
                    start = null;
                });
            }

            function removeListners() {
                $(window).off('touchstart');
                $(window).off('touchmove');
                $(window).off('touchend');
                $(window).off('touchcancel');
                $(window).off('touchleave');
                $(window).off('mousedown');
                $(window).off('mousemove');
                $(window).off('mouseup');
                $(window).off('mouseleave');
            }
            // Change position to fixed for small screens
            function checkWidth() {
                if ($(window).width() <= 768) {
                    $('#sidebar').css('position', 'fixed');
                    $('#sidebar').css('z-index', '100');
                    $('#sidebar').css('left', '-100%');
                    $('#sidebar').css('transform', 'translateX(-50%)');
                    $('#sidebar').addClass('small');
                    addListners()
                } else {
                    $('#sidebar').css('position', 'sticky');
                    $('#sidebar').css('z-index', '0');
                    $('#sidebar').css('left', '0');
                    $('#sidebar').css('transform', 'translateX(0)');
                    $('#sidebar').removeClass('small');
                    removeListners()
                }
            }

            checkWidth();
            $(window).resize(checkWidth);
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>
